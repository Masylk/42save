{"ast":null,"code":"var _jsxFileName = \"/home/mtogbe/42save/transcendence_box/pong/src/components/MultiplayerManager.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport GameBox from './GameBox';\nimport io from 'socket.io-client';\nimport WaitingBox from './WaitingBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STARTPOS_Y = 200;\nconst STARTPOS_X = 860;\nconst ONLINEMODE = 0;\nconst PLAYERMODE = 2;\nconst MultiplayerManager = props => {\n  _s();\n  const [infos, setInfos] = useState({\n    opponentX: STARTPOS_X,\n    opponentY: STARTPOS_Y,\n    userId: Math.floor(Math.random() * 9999) + 1,\n    matchFound: false,\n    rightPlayer: ONLINEMODE,\n    leftPlayer: PLAYERMODE,\n    connected: false\n  });\n\n  // const socket = io('ws://localhost:8000');\n\n  useEffect(() => {\n    if (infos.connected === false) {}\n\n    // Listen to the 'opponentMoved' event\n    socket.on('opponentMoved', data => {\n      setInfos({\n        opponentX: data.x,\n        opponentY: data.y\n      });\n    });\n\n    // Emit a 'playerMoved' event\n    // const handleMove = (x, y) => {\n    //    socket.emit('playerMoved', { x, y });\n    // }\n\n    // Clean up the event listeners when the component unmounts\n    return () => {\n      window.removeEventListener('beforeunload', () => {\n        socket.disconnect();\n      });\n      socket.off('connect');\n      socket.off('opponentMoved');\n      socket.disconnect();\n    };\n  }, [infos]);\n  return infos.matchFound === true ? /*#__PURE__*/_jsxDEV(GameBox, {\n    height: props.height,\n    width: props.width,\n    opponentPosX: infos.opponentX,\n    opponentPosY: infos.opponentY,\n    rightPlayer: infos.rightPlayer,\n    leftPlayer: infos.leftPlayer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(WaitingBox, {\n    height: props.height,\n    width: props.width\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 11\n  }, this);\n};\n_s(MultiplayerManager, \"LlhzIbeCZs7ph4glLb4BSJQvNDc=\");\n_c = MultiplayerManager;\nexport default MultiplayerManager;\nvar _c;\n$RefreshReg$(_c, \"MultiplayerManager\");","map":{"version":3,"names":["useEffect","useState","GameBox","io","WaitingBox","jsxDEV","_jsxDEV","STARTPOS_Y","STARTPOS_X","ONLINEMODE","PLAYERMODE","MultiplayerManager","props","_s","infos","setInfos","opponentX","opponentY","userId","Math","floor","random","matchFound","rightPlayer","leftPlayer","connected","socket","on","data","x","y","window","removeEventListener","disconnect","off","height","width","opponentPosX","opponentPosY","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mtogbe/42save/transcendence_box/pong/src/components/MultiplayerManager.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport GameBox from './GameBox';\nimport io from 'socket.io-client'\nimport WaitingBox from './WaitingBox'\n\nconst STARTPOS_Y = 200;\nconst STARTPOS_X = 860;\nconst ONLINEMODE = 0;\nconst PLAYERMODE = 2;\n\nconst MultiplayerManager = (props) => {\n    const [infos, setInfos] = useState({\n        opponentX: STARTPOS_X,\n        opponentY: STARTPOS_Y,\n        userId: Math.floor(Math.random() * 9999) + 1,\n        matchFound: false,\n        rightPlayer: ONLINEMODE,\n        leftPlayer: PLAYERMODE,\n        connected: false\n    })\n\n    // const socket = io('ws://localhost:8000');\n\n    useEffect(() => {\n        if (infos.connected === false)\n        {\n\n        }\n        \n        \n        // Listen to the 'opponentMoved' event\n        socket.on('opponentMoved', (data) => {\n           setInfos({\n              opponentX: data.x,\n              opponentY: data.y,\n           });\n        });\n        \n        // Emit a 'playerMoved' event\n        // const handleMove = (x, y) => {\n        //    socket.emit('playerMoved', { x, y });\n        // }\n        \n        // Clean up the event listeners when the component unmounts\n        return () => {\n            window.removeEventListener('beforeunload', () => {\n                socket.disconnect();\n              });\n           socket.off('connect');\n           socket.off('opponentMoved');\n           socket.disconnect();\n        };\n     }, [infos]);\n\n    return (\n        infos.matchFound === true ? (\n          <GameBox height={props.height} width={props.width}\n            opponentPosX={infos.opponentX} opponentPosY={infos.opponentY}\n            rightPlayer={infos.rightPlayer} leftPlayer={infos.leftPlayer}\n          />\n        ) : (\n          <WaitingBox height={props.height} width={props.width} />\n        )\n      );\n}\n\n\n \nexport default MultiplayerManager;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,UAAU,GAAG,CAAC;AACpB,MAAMC,UAAU,GAAG,CAAC;AAEpB,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC;IAC/Be,SAAS,EAAER,UAAU;IACrBS,SAAS,EAAEV,UAAU;IACrBW,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;IAC5CC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAEd,UAAU;IACvBe,UAAU,EAAEd,UAAU;IACtBe,SAAS,EAAE;EACf,CAAC,CAAC;;EAEF;;EAEAzB,SAAS,CAAC,MAAM;IACZ,IAAIc,KAAK,CAACW,SAAS,KAAK,KAAK,EAC7B,CAEA;;IAGA;IACAC,MAAM,CAACC,EAAE,CAAC,eAAe,EAAGC,IAAI,IAAK;MAClCb,QAAQ,CAAC;QACNC,SAAS,EAAEY,IAAI,CAACC,CAAC;QACjBZ,SAAS,EAAEW,IAAI,CAACE;MACnB,CAAC,CAAC;IACL,CAAC,CAAC;;IAEF;IACA;IACA;IACA;;IAEA;IACA,OAAO,MAAM;MACTC,MAAM,CAACC,mBAAmB,CAAC,cAAc,EAAE,MAAM;QAC7CN,MAAM,CAACO,UAAU,EAAE;MACrB,CAAC,CAAC;MACLP,MAAM,CAACQ,GAAG,CAAC,SAAS,CAAC;MACrBR,MAAM,CAACQ,GAAG,CAAC,eAAe,CAAC;MAC3BR,MAAM,CAACO,UAAU,EAAE;IACtB,CAAC;EACJ,CAAC,EAAE,CAACnB,KAAK,CAAC,CAAC;EAEZ,OACIA,KAAK,CAACQ,UAAU,KAAK,IAAI,gBACvBhB,OAAA,CAACJ,OAAO;IAACiC,MAAM,EAAEvB,KAAK,CAACuB,MAAO;IAACC,KAAK,EAAExB,KAAK,CAACwB,KAAM;IAChDC,YAAY,EAAEvB,KAAK,CAACE,SAAU;IAACsB,YAAY,EAAExB,KAAK,CAACG,SAAU;IAC7DM,WAAW,EAAET,KAAK,CAACS,WAAY;IAACC,UAAU,EAAEV,KAAK,CAACU;EAAW;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7D,gBAEFpC,OAAA,CAACF,UAAU;IAAC+B,MAAM,EAAEvB,KAAK,CAACuB,MAAO;IAACC,KAAK,EAAExB,KAAK,CAACwB;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtD;AAET,CAAC;AAAA7B,EAAA,CAtDKF,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AA0DxB,eAAeA,kBAAkB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}