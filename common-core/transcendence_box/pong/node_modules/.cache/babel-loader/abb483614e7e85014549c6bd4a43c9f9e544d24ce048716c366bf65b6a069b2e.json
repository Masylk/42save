{"ast":null,"code":"var _jsxFileName = \"/home/mtogbe/42save/transcendence_box/pong/src/components/MultiplayerManager.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport GameBox from './GameBox';\nimport io from 'socket.io-client';\nimport WaitingBox from './WaitingBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STARTPOS_Y = 200;\nconst STARTPOS_X = 860;\nconst ONLINEMODE = 0;\nconst PLAYERMODE = 2;\nconst MultiplayerManager = props => {\n  _s();\n  const [infos, setInfos] = useState({\n    opponentX: STARTPOS_X,\n    opponentY: STARTPOS_Y,\n    userId: Math.floor(Math.random() * 9999) + 1,\n    matchFound: false,\n    rightPlayer: ONLINEMODE,\n    leftPlayer: PLAYERMODE,\n    connected: false,\n    socket: null\n  });\n\n  // const socket = io('ws://localhost:8000');\n\n  useEffect(() => {\n    if (infos.connected === false) {\n      let socket = io.connect(\"http://localhost:8000\", {\n        query: {\n          userId: infos.userId\n        }\n      });\n      window.addEventListener('beforeunload', () => {\n        socket.disconnect();\n      });\n\n      // Listen to the 'connect' event\n      socket.on('connect', () => {\n        console.log('Connected to socket.io server');\n        console.log('User Id :' + infos.userId);\n        setInfos(prevInfos => ({\n          ...prevInfos,\n          connected: true,\n          socket: so\n        }));\n      });\n\n      //DEFAULT TESTING: NEED TO BE REMOVED\n      socket.on('game-start', () => {\n        console.log(\"match found !\");\n        setInfos(prevInfos => ({\n          ...prevInfos,\n          matchFound: true\n        }));\n      });\n\n      //Listen to both p1 and p2 events to determinate on which pos you will be\n      socket.on('game-start-p1', () => {\n        console.log(\"match found !\");\n        setInfos(prevInfos => ({\n          ...prevInfos,\n          matchFound: true,\n          rightPlayer: ONLINEMODE,\n          leftPlayer: PLAYERMODE\n        }));\n      });\n      socket.on('game-start-p2', () => {\n        console.log(\"match found !\");\n        setInfos(prevInfos => ({\n          ...prevInfos,\n          matchFound: true,\n          rightPlayer: PLAYERMODE,\n          leftPlayer: ONLINEMODE\n        }));\n      });\n      socket.on('connect_error', error => {\n        console.error('Failed to connect to socket.io server', error);\n      });\n\n      // Listen to the 'opponentMoved' event\n      socket.on('opponentMoved', data => {\n        setInfos({\n          opponentX: data.x,\n          opponentY: data.y\n        });\n      });\n    }\n\n    // Emit a 'playerMoved' event\n    // const handleMove = (x, y) => {\n    //    socket.emit('playerMoved', { x, y });\n    // }\n\n    // Clean up the event listeners when the component unmounts\n    return () => {\n      window.removeEventListener('beforeunload', () => {\n        socket.disconnect();\n      });\n      socket.off('connect');\n      socket.off('opponentMoved');\n      socket.disconnect();\n    };\n  }, [infos]);\n  return infos.matchFound === true ? /*#__PURE__*/_jsxDEV(GameBox, {\n    height: props.height,\n    width: props.width,\n    opponentPosX: infos.opponentX,\n    opponentPosY: infos.opponentY,\n    rightPlayer: infos.rightPlayer,\n    leftPlayer: infos.leftPlayer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(WaitingBox, {\n    height: props.height,\n    width: props.width\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 11\n  }, this);\n};\n_s(MultiplayerManager, \"rufLHKtPAk27sqrtp1TnkDBlqEs=\");\n_c = MultiplayerManager;\nexport default MultiplayerManager;\nvar _c;\n$RefreshReg$(_c, \"MultiplayerManager\");","map":{"version":3,"names":["useEffect","useState","GameBox","io","WaitingBox","jsxDEV","_jsxDEV","STARTPOS_Y","STARTPOS_X","ONLINEMODE","PLAYERMODE","MultiplayerManager","props","_s","infos","setInfos","opponentX","opponentY","userId","Math","floor","random","matchFound","rightPlayer","leftPlayer","connected","socket","connect","query","window","addEventListener","disconnect","on","console","log","prevInfos","so","error","data","x","y","removeEventListener","off","height","width","opponentPosX","opponentPosY","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mtogbe/42save/transcendence_box/pong/src/components/MultiplayerManager.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport GameBox from './GameBox';\nimport io from 'socket.io-client'\nimport WaitingBox from './WaitingBox'\n\nconst STARTPOS_Y = 200;\nconst STARTPOS_X = 860;\nconst ONLINEMODE = 0;\nconst PLAYERMODE = 2;\n\nconst MultiplayerManager = (props) => {\n    const [infos, setInfos] = useState({\n        opponentX: STARTPOS_X,\n        opponentY: STARTPOS_Y,\n        userId: Math.floor(Math.random() * 9999) + 1,\n        matchFound: false,\n        rightPlayer: ONLINEMODE,\n        leftPlayer: PLAYERMODE,\n        connected: false,\n        socket: null\n    })\n\n    // const socket = io('ws://localhost:8000');\n\n    useEffect(() => {\n        if (infos.connected === false)\n        {\n          let socket=io.connect(\"http://localhost:8000\", {\n            query: {\n                userId: infos.userId\n            }\n          })\n        \n          window.addEventListener('beforeunload', () => {\n              socket.disconnect();\n            });\n\n          \n          // Listen to the 'connect' event\n          socket.on('connect', () => {\n              console.log('Connected to socket.io server');\n              console.log('User Id :' + infos.userId);\n              setInfos(prevInfos => ({\n                ...prevInfos,\n                connected: true,\n                socket: so\n              }));\n          });\n          \n          //DEFAULT TESTING: NEED TO BE REMOVED\n          socket.on('game-start', () => {\n              console.log(\"match found !\");\n              setInfos(prevInfos => ({\n                  ...prevInfos,\n                  matchFound: true\n                }));\n          })\n\n          //Listen to both p1 and p2 events to determinate on which pos you will be\n          socket.on('game-start-p1', () => {\n            console.log(\"match found !\");\n            setInfos(prevInfos => ({\n                ...prevInfos,\n                matchFound: true,\n                rightPlayer: ONLINEMODE,\n                leftPlayer: PLAYERMODE\n              }));\n          })\n\n          socket.on('game-start-p2', () => {\n            console.log(\"match found !\");\n            setInfos(prevInfos => ({\n                ...prevInfos,\n                matchFound: true,\n                rightPlayer: PLAYERMODE,\n                leftPlayer: ONLINEMODE\n              }));\n          })\n\n          socket.on('connect_error', (error) => {\n              console.error('Failed to connect to socket.io server', error);\n          });\n        \n          // Listen to the 'opponentMoved' event\n          socket.on('opponentMoved', (data) => {\n            setInfos({\n              opponentX: data.x,\n              opponentY: data.y,\n            });\n          });\n        \n        }\n        \n        // Emit a 'playerMoved' event\n        // const handleMove = (x, y) => {\n        //    socket.emit('playerMoved', { x, y });\n        // }\n        \n        // Clean up the event listeners when the component unmounts\n        return () => {\n            window.removeEventListener('beforeunload', () => {\n                socket.disconnect();\n              });\n           socket.off('connect');\n           socket.off('opponentMoved');\n           socket.disconnect();\n        };\n     }, [infos]);\n\n    return (\n        infos.matchFound === true ? (\n          <GameBox height={props.height} width={props.width}\n            opponentPosX={infos.opponentX} opponentPosY={infos.opponentY}\n            rightPlayer={infos.rightPlayer} leftPlayer={infos.leftPlayer}\n          />\n        ) : (\n          <WaitingBox height={props.height} width={props.width} />\n        )\n      );\n}\n\n\n \nexport default MultiplayerManager;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}